/*
 * Copyright 2022 - present Maksym Ostroverkhov.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "application"
}

description = "Long-running test for netty based implementation of rfc6455 - the websocket protocol"

dependencies {
    implementation project(":netty-websocket-http1-test")
    implementation "org.slf4j:slf4j-api"

    if (osdetector.os == "linux") {
        runtimeOnly "io.netty:netty-transport-native-epoll::${osdetector.classifier}"
    } else if (osdetector.os == "osx") {
        runtimeOnly "io.netty:netty-transport-native-kqueue::${osdetector.classifier}"
    }
    runtimeOnly "io.netty:netty-tcnative-boringssl-static::${osdetector.classifier}"
    runtimeOnly "ch.qos.logback:logback-classic"
}

task serverScripts(type: CreateStartScripts) {
    mainClass = "com.jauntsdn.netty.handler.codec.http.websocketx.soaktest.server.Main"
    applicationName = "${project.name}-server"
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}

task clientScripts(type: CreateStartScripts) {
    mainClass = "com.jauntsdn.netty.handler.codec.http.websocketx.soaktest.client.Main"
    applicationName = "${project.name}-client"
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}

startScripts.dependsOn serverScripts
startScripts.dependsOn clientScripts

tasks.named("startScripts") {
    enabled = false
}